package modules;
import io.swagger.v3.oas.annotations.OpenAPIDefinition;
import io.swagger.v3.oas.annotations.info.Info;
import modules.departmentservice.pl.piomin.services.department.model.Department;
import modules.departmentservice.pl.piomin.services.department.repository.DepartmentRepository;
import modules.employeeservice.pl.piomin.services.employee.model.Employee;
import modules.employeeservice.pl.piomin.services.employee.repository.EmployeeRepository;
import modules.organizationservice.pl.piomin.services.organization.model.Organization;
import modules.organizationservice.pl.piomin.services.organization.repository.OrganizationRepository;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.cloud.openfeign.EnableFeignClients;
import org.springframework.context.annotation.Bean;
@SpringBootApplication
@EnableFeignClients
@OpenAPIDefinition(info = @Info(description = "United-Monolith API v1.0 generated by MJUniter", title = "United-Monolith API", version = "1.0"))
public class Application {
    @Bean
    EmployeeRepository repositoryFromEmployeeservice() {
        EmployeeRepository repository = new EmployeeRepository();
        repository.add(new Employee(1L, 1L, "John Smith", 34, "Analyst"));
        repository.add(new Employee(1L, 1L, "Darren Hamilton", 37, "Manager"));
        repository.add(new Employee(1L, 1L, "Tom Scott", 26, "Developer"));
        repository.add(new Employee(1L, 2L, "Anna London", 39, "Analyst"));
        repository.add(new Employee(1L, 2L, "Patrick Dempsey", 27, "Developer"));
        repository.add(new Employee(2L, 3L, "Kevin Price", 38, "Developer"));
        repository.add(new Employee(2L, 3L, "Ian Scott", 34, "Developer"));
        repository.add(new Employee(2L, 3L, "Andrew Campton", 30, "Manager"));
        repository.add(new Employee(2L, 4L, "Steve Franklin", 25, "Developer"));
        repository.add(new Employee(2L, 4L, "Elisabeth Smith", 30, "Developer"));
        return repository;
    }

    @Bean
    DepartmentRepository repositoryFromDepartmentservice() {
        DepartmentRepository repository = new DepartmentRepository();
        repository.add(new Department(1L, "Development"));
        repository.add(new Department(1L, "Operations"));
        repository.add(new Department(2L, "Development"));
        repository.add(new Department(2L, "Operations"));
        return repository;
    }

    @Bean
    OrganizationRepository repositoryFromOrganizationservice() {
        OrganizationRepository repository = new OrganizationRepository();
        repository.add(new Organization("Microsoft", "Redmond, Washington, USA"));
        repository.add(new Organization("Oracle", "Redwood City, California, USA"));
        return repository;
    }

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}